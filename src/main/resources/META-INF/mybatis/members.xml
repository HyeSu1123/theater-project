<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.idev.mapper.MembersMapper">
	<select id="selectAll" resultType="Members">
	select * from members
	</select>

	<!-- 회원 로그인 -->
	<select id="login" resultType="Members" >
	select * from members where id=#{id} AND authority='1'
	</select>

	<!-- 관리자 로그인 -->	
	<select id="loginAdmin" resultType="Members" >
	select * from members where id=#{id} AND authority='0'
	</select>
	
	<!-- 아이디 중복확인 -->
	<select id="checkid" resultType="int" parameterType="String">
	select count(*) from members where id=#{id}
	</select>
	
	<!-- 회원용 회원가입 -->
	<insert id="insert" parameterType="Members">
	INSERT INTO MEMBERS
	(ID, PASSWORD, NAME, BIRTH_DATE, GENDER, EMAIL, PHONE,REG_DATE,AUTHORITY)
	VALUES(#{id},#{password}, #{name}, #{birth_date}, #{gender}, #{email}, #{phone},sysdate,'1')
	</insert>
	
	<!-- 비번찾기 -->
	<select id="findPassword" parameterType="String" resultType="Members">
		select * from members where id=#{id}
	</select>
	
	<!-- 패스워드변경 -->
	<update id="updatePassword">
		update members set password=#{password} where id=#{id}
	</update>
	
	
	
	<!-- 관리자용 회원가입 -->
	<insert id="insertAdmin" parameterType="Members">
	INSERT INTO MEMBERS
	(ID, PASSWORD, NAME, BIRTH_DATE, GENDER, EMAIL, PHONE, REG_DATE,AUTHORITY)
	VALUES(#{id},#{password}, #{name}, #{birth_date}, #{gender}, #{email}, #{phone}, sysdate,'3')
	</insert>
	
	<!-- 회원 정보 수정 -->
	<update id="update" parameterType="Members">
	UPDATE MEMBERS
	SET EMAIL=#{email}, PHONE=#{phone}
	WHERE ID=#{id}
	</update>
	
	
	<delete id="delete" parameterType="Members">
	 delete from members where id=#{id}
	</delete>
	
	<!-- 전체 회원 페이징 -->
	<select id="getPageList" parameterType="Map" resultType="Members">
		SELECT * FROM (
			SELECT rownum AS R, T.* FROM 
				(SELECT * FROM members ORDER BY reg_date DESC) T )
		WHERE R BETWEEN #{startNo} AND #{endNo}
	</select>
	<!-- 전체 회원 수 -->
	<select id="getCount" resultType="int">
		SELECT count(*) FROM members
	</select>
	
	<!-- 검색 회원 페이징 -->
	<select id="searchPageList" parameterType="Map" resultType="Members">
		SELECT * FROM (
			SELECT rownum AS R, T.* FROM 
				(select * from members
		<if test="columns=='id'">
		 where id like '%'||#{find}||'%'
		</if>
		<if test="columns=='name'">
		 where name like '%'||#{find}||'%'
		</if>
		<if test="columns=='authority'">
		 where authority=#{find}
		</if>
		ORDER BY reg_date DESC) T )
		WHERE R BETWEEN #{startNo} AND #{endNo}
	</select>
	<!-- 검색 회원 수 -->
	<select id="getSearchCount" parameterType="Map" resultType="int">
		SELECT count(*) FROM members
		<if test="columns=='id'">
			where id like '%'||#{find}||'%'
		</if>
		<if test="columns=='name'">
			where name like '%'||#{find}||'%'
		</if>
		<if test="columns=='authority'">
			where authority=#{find}
		</if>
	</select>
		<!-- 회원 1명 조회 -->
	<select id="getOne" parameterType="String" resultType="Members">		
		SELECT * FROM members
		WHERE id=#{id}
	</select>
	
	<!-- 관리자로 변경 -->
	<update id="updateAdmin" parameterType="String">
		UPDATE members 
 			SET authority=0
		WHERE id=#{id}
	</update>
	
	<!-- 관리자 신청한 회원 조회 -->
	<select id="getAppList" parameterType="Map" resultType="Members">
		SELECT * FROM (
			SELECT rownum AS R, T.* FROM 
				(SELECT * FROM members WHERE authority=3 ORDER BY reg_date DESC) T )
		WHERE R BETWEEN #{startNo} AND #{endNo}
	</select>

	<!-- 관리자 신청 회원 수 -->
	<select id="getAppCount" resultType="int">
		SELECT count(*) FROM members WHERE authority=3
	</select>
	
	<!-- 회원 삭제 -->
	<delete id="deleteMember" parameterType="String">
		DELETE FROM members
		WHERE id=#{id}
	</delete>
</mapper> 